generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GeneralSettings {
  id Int @id @default(autoincrement())
  film_tape Boolean @default(true)
}

model User {
  id              String            @id @default(uuid())
  email           String         @unique
  created_at      DateTime       @default(now())
  date_of_birth   DateTime?
  email_verified  Boolean        @default(false)
  first_name      String
  last_login_at   DateTime?
  last_name       String
  locale          String         @default("ar")
  password_hash   String
  phone_number    String
  profile_img_url String?
  status          String         @default("active")
  timezone        String         @default("UTC+3")
  updated_at      DateTime?      @updatedAt
  address         UserAddress?
  role            UserRole?
  RefreshToken    RefreshToken[]
}

model UserAddress {
  id              Int       @id @default(autoincrement())
  user_id         String       @unique
  address_details String
  second_address  String?
  notes           String?
  created_at      DateTime  @default(now())
  updated_at      DateTime? @updatedAt
  user            User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  userRole    UserRole[]
}

model UserRole {
  id Int @id @default(autoincrement())
  user_id String @unique
  role_id Int @default(2)
  role    Role @relation(fields: [role_id], references: [id])
  user    User @relation(fields: [user_id], references: [id])
}

model Products {
  id String @id @default(uuid())
  name Json
  slug String @unique
  description Json
  price Int
  discount_percent Int @default(0)
  type String
  categories String[]
  is_new Boolean @default(false)
  state String @default("available") // availabe & out-of-stock & hidden
  sizes String[]
  colors String[]
  images Json
  stock Json
  lists Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([slug])
  @@index([type])
}

model Categories {
  id Int @id @default(autoincrement())
  name Json @default("{\"en\": \"Unknown Name\", \"ar\": \"مجهول الاسم\"}") 
  slug String @unique
  navbarImg String?
  navbarLgImg String?
  imgUrl String?
}

model SubCategories {
  id Int @id @default(autoincrement())
  name Json @default("{\"en\": \"Unknown Name\", \"ar\": \"مجهول الاسم\"}")
  slug  String @unique
  type String
  path String
  image String?

  @@index([slug])
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user_id   String @unique
  user      User     @relation(fields: [user_id], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model Themes {
  id                      Int       @id @default(1)
  primary_color           String    @default("#0a0908")
  primary_invert_color    String    @default("#F1EFEF")
  secondary_color         String    @default("#22333b")
  secondary_invert_color  String    @default("#D0D0D0")
  inbetween_color         String    @default("#9999a1")
  content_color           String    @default("oklch(0.473 0.137 46.201)")
  content_invert_color    String    @default("oklch(0.473 0.137 46.201)")
  content_inbetween_color String    @default("oklch(0.924 0.12 95.746)")
  name                    Json      @default("{\"ar\": \"كاكاو مشبع\", \"en\": \"Dusk Cacoa\"}")
  scheme_id               Int       @default(1)
  created_at              DateTime  @default(now())
  updated_at              DateTime? @updatedAt
}
